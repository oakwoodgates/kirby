[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "kirby"
version = "0.1.0"
description = "High-performance market data ingestion and API system for crypto exchanges"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Oakwood Gates"}
]

dependencies = [
    # API Framework
    "fastapi>=0.109.0",
    "uvicorn[standard]>=0.27.0",
    "gunicorn>=21.2.0",

    # Database
    "asyncpg>=0.29.0",
    "sqlalchemy[asyncio]>=2.0.25",
    "alembic>=1.13.0",
    "psycopg2-binary>=2.9.9",  # For Alembic migrations

    # Validation & Settings
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",

    # Exchange Integration
    "hyperliquid-python-sdk>=0.19.0",
    "ccxt>=4.2.0",
    # "ccxt-pro>=4.2.0",  # For WebSocket support - requires separate install

    # Utilities
    "pyyaml>=6.0",
    "python-dotenv>=1.0.0",
    "httpx>=0.26.0",  # Async HTTP client
    "websockets>=12.0",

    # Logging & Monitoring
    "structlog>=24.1.0",
    "python-json-logger>=2.0.7",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "httpx>=0.26.0",  # For TestClient

    # Code Quality
    "black>=24.1.0",
    "ruff>=0.1.0",
    "mypy>=1.8.0",

    # Development
    "ipython>=8.20.0",
    "ipdb>=0.13.13",
]

[tool.setuptools]
packages = ["src"]

[tool.setuptools.package-dir]
"" = "."

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = [
    "ccxt.*",
    "hyperliquid.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --cov=src --cov-report=term-missing"
testpaths = ["tests"]
pythonpath = ["."]
asyncio_mode = "auto"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]
